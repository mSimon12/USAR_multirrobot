;; Auto-generated. Do not edit!


(when (boundp 'quadrotor_controllers::motionGoal)
  (if (not (find-package "QUADROTOR_CONTROLLERS"))
    (make-package "QUADROTOR_CONTROLLERS"))
  (shadow 'motionGoal (find-package "QUADROTOR_CONTROLLERS")))
(unless (find-package "QUADROTOR_CONTROLLERS::MOTIONGOAL")
  (make-package "QUADROTOR_CONTROLLERS::MOTIONGOAL"))

(in-package "ROS")
;;//! \htmlinclude motionGoal.msg.html
(if (not (find-package "GEOMETRY_MSGS"))
  (ros::roseus-add-msgs "geometry_msgs"))


(defclass quadrotor_controllers::motionGoal
  :super ros::object
  :slots (_destination ))

(defmethod quadrotor_controllers::motionGoal
  (:init
   (&key
    ((:destination __destination) (instance geometry_msgs::Twist :init))
    )
   (send-super :init)
   (setq _destination __destination)
   self)
  (:destination
   (&rest __destination)
   (if (keywordp (car __destination))
       (send* _destination __destination)
     (progn
       (if __destination (setq _destination (car __destination)))
       _destination)))
  (:serialization-length
   ()
   (+
    ;; geometry_msgs/Twist _destination
    (send _destination :serialization-length)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; geometry_msgs/Twist _destination
       (send _destination :serialize s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; geometry_msgs/Twist _destination
     (send _destination :deserialize buf ptr-) (incf ptr- (send _destination :serialization-length))
   ;;
   self)
  )

(setf (get quadrotor_controllers::motionGoal :md5sum-) "0ee7a53442725ed49843ff163a1b1b2a")
(setf (get quadrotor_controllers::motionGoal :datatype-) "quadrotor_controllers/motionGoal")
(setf (get quadrotor_controllers::motionGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#Define the goal
geometry_msgs/Twist destination

================================================================================
MSG: geometry_msgs/Twist
# This expresses velocity in free space broken into its linear and angular parts.
Vector3  linear
Vector3  angular

================================================================================
MSG: geometry_msgs/Vector3
# This represents a vector in free space. 
# It is only meant to represent a direction. Therefore, it does not
# make sense to apply a translation to it (e.g., when applying a 
# generic rigid transformation to a Vector3, tf2 will only apply the
# rotation). If you want your data to be translatable too, use the
# geometry_msgs/Point message instead.

float64 x
float64 y
float64 z
")



(provide :quadrotor_controllers/motionGoal "0ee7a53442725ed49843ff163a1b1b2a")


