<?xml version="1.0"?>

<launch>
  <arg name="robot_name"  default="robot"/>
  <arg name="map_frame"   default="$(arg robot_name)/map"/>
  <arg name="base_frame"  default="$(arg robot_name)/base_link"/>
  <arg name="odom_frame"  default="$(arg robot_name)/odom"/>

  <arg name="scan_topic"  	default="scan"/>
  <arg name="odom_topic"  	default="odom"/>
  <arg name="rgb_topic"   	default="camera/rgb/image_raw"/>
  <arg name="depth_topic" 	default="camera/depth/image_raw"/>
  <arg name="camera_info_topic" default="camera/rgb/camera_info"/>

  <arg name="database_path"     default="$(find pioneer3at_slam)/db/$(arg robot_name)-rtabmap.db"/>
  <arg name="rtabmapviz"        default="false"/>
  <arg name="localization"      default="false"/>
  
  <arg name="wait_for_transform"  default="0.1"/> 

  <!--Syncronization between camera topics -->
  <node name="rgbd_sync" pkg="nodelet" type="nodelet" args="standalone rtabmap_ros/rgbd_sync" output="log">
      <remap from="rgb/image"       to="$(arg rgb_topic)"/>
      <remap from="depth/image"     to="$(arg depth_topic)"/>
      <remap from="rgb/camera_info" to="$(arg camera_info_topic)"/>
      <remap from="rgbd_image"      to="rgbd_image"/> <!-- output -->
      
      <!-- Should be true for not synchronized camera topics 
           (e.g., false for kinectv2, zed, realsense, true for xtion, kinect360)-->
      <param name="approx_sync"       value="true"/> 
  </node>

  <!-- RGB-D Odometry
  <node pkg="rtabmap_ros" type="rgbd_odometry" name="rgbd_odometry" output="screen" args="delete_db_on_start">
          <remap from="rgb/image"       to="$(arg rgb_topic)"/>
          <remap from="depth/image"     to="$(arg depth_topic)"/>
          <remap from="rgb/camera_info" to="$(arg camera_info_topic)"/>
          <remap from="rgbd_image"      to="$(arg rgb_topic)"/>
          <remap from="odom"            to="$(arg odom_topic)"/>
      
          <param name="frame_id"                    type="string" value="$(arg base_frame)"/>
          <param name="odom_frame_id"               type="string" value="$(arg odom_frame)"/>
          <param name="wait_for_transform" 	    type="bool" value="false"/>
          <param name="queue_size"                  type="int"    value="10"/>
          <param name="subscribe_rgbd"              type="bool"   value="false"/>
   </node> -->

  <!-- Mapping -->
  <node name="rtab_mapping" pkg="rtabmap_ros" type="rtabmap" output="log" args="--delete_db_on_start">

          <!-- Define path of data base generated -->
	  <param name="database_path" type="string" value="$(find pioneer3at_slam)/db/$(arg robot_name)-rtabmap.db"/>
  	  <param name="frame_id" type="string" value="$(arg base_frame)"/>
	  <param name="map_frame_id" type="string" value="$(arg map_frame)"/>
	  <param name="wait_for_transform" type="bool" value="true"/>
	  <param name="wait_for_transform_duration"  type="double"   value="$(arg wait_for_transform)"/>

          <param name="subscribe_depth" type="bool" value="true"/>
          <param name="subscribe_rgbd" type="bool" value="false"/>
	  <param name="subscribe_scan" type="bool" value="false"/>
	  
	  <!-- When sending goals on /rtabmap/goal topic, use actionlib to communicate with move_base --> 
	  <param name="use_action_for_goal" type="bool" value="true"/>
          <remap from="move_base"            to="move_base"/>

          <!-- inputs -->
	  <!--<remap from="scan"            to="$(arg scan_topic)"/>-->
	  <remap from="rgb/image"       to="$(arg rgb_topic)"/>
  	  <remap from="depth/image"     to="$(arg depth_topic)"/>
  	  <remap from="rgb/camera_info" to="$(arg camera_info_topic)"/>

	  <!-- Fix odom covariance as in simulation the covariance in /odom topic is high (0.1 for linear and 0.05 for angular) -->
          <param name="odom_frame_id" value="$(arg odom_frame)"/>
          <param name="odom_tf_linear_variance" value="0.001"/>
          <param name="odom_tf_angular_variance" value="0.001"/>

	  <!-- output -->
	  <remap from="rgbd_image"      to="rgbd_image"/> 
	  <param name="queue_size" type="int" value="30"/>

	  <!-- Updates map even if the robot is not moving -->
	  <param name="map_always_update" type="bool" value="true"/>
	  
	  <!-- Remap get_map_data service for download of the map -->
	  <remap from="rtabmap/get_map_data" to="get_map_data"/> 

    	  <!-- RTAB-Map's parameters: do "rosrun rtabmap rtabmap (double-dash)params" to see the list of available parameters. -->
          <!--<param name="RGBD/AngularUpdate"        type="string" value="0.01"/>-->	<!-- Update map only if the robot is moving -->
          <!--<param name="RGBD/LinearUpdate"         type="string" value="0.01"/>-->	<!-- Update map only if the robot is moving -->
          <!--<param name="RGBD/OptimizeFromGraphEnd" type="string" value="false"/>-->	<!-- Set to false to generate map correction between /map and /odom -->
	  <!--<param name="RGBD/ProximityPathMaxNeighbors" type="string" value="0"/> -->
	  <!--<param name="RGBD/ProximityBySpace" type="string" value="true"/>-->   <!-- Local loop closure detection (using estimated position) with locations in WM -->
	  <!--<param name="RGBD/OptimizeMaxError" type="string" value="0.1"/>-->

	  <param name="Kp/MaxDepth" type="string" value="10.0"/>
	  <!--<param name="Kp/MinDepth" type="string" value="10.0"/>-->

	  <!--<param name="Icp/CorrespondenceRatio" value="0.2"/>-->			<!-- Ratio of matching correspondences to accept the transform -->
	  <!--<param name="Icp/Iterations" value="30"/>-->				<!-- Max iterations -->

	  <!--<param name="Vis/MinInliers" type="string" value="15"/>-->      <!-- 3D visual words minimum inliers to accept loop closure -->
	  <!--<param name="Vis/InlierDistance" type="string" value="0.1"/>-->    <!-- 3D visual words correspondence distance -->
	  
	  <!--<param name="Rtabmap/TimeThr" type="string" value="200"/>-->

	  <param name="Odom/Stategy" type="int" value="1"/>			<!-- Change the Visual Odometry Stategy into Frame to Frame -->

	  <param name="OdomF2M/MaxSize" type="string" value="1000"/>		<!-- maximum features map size, default 2000 --> 

	  <!--<param name="Vis/CorType" value="1"/>-->					<!-- Change the Matching Correspondences into Optical Flow -->
	  <param name="Vis/MaxFeatures" type="string" value="600"/>		<!-- maximum features extracted by image, default 1000 -->

	  <!--<param name="Mem/RehearsalSimilarity" type="string" value="0.30"/>-->

	  <!--<param name="Reg/Force3DoF" type="string" value="true"/>-->
 	  <!--<param name="Reg/Strategy" type="string" value="1"/> -->     <!-- Loop closure transformation: 0=Visual, 1=ICP, 2=Visual+ICP -->
	  
	  <param name="GridGlobal/MinSize" type="string" value="150"/>
          <!--<param name="GridGlobal/OccupancyThr" type="string" value="0.5"/>-->

	  <param name="Rtabmap/DetectionRate" type="string" value="3"/>
 	  
          <!--<param name="Grid/FromDepth" type="string" value="true"/>-->
	  <param name="Grid/CellSize" type="string" value="0.07"/>
	  <param name="Grid/RangeMax" type="double" value="15.0"/>
	  <param name="Grid/RayTracing" type="string" value="true"/>		<!--Must be true to ensure free space is published into the octomap -->
 	  <param name="Grid/MaxObstacleHeight" type="string" value="0.4"/>
	  <param name="Grid/MaxGroundAngle" type="string" value="40.0"/>
          <!--<param name="octomap_tree_depth" type="int" value="50"/>-->


	  <!-- localization mode -->
	  <param name="Mem/InitWMWithAllNodes" type="string" value="$(arg localization)"/> 
  </node>
    
    <!-- visualization with rtabmapviz -->
    <node if="$(arg rtabmapviz)" pkg="rtabmap_ros" type="rtabmapviz" name="rtabmapviz" args="-d $(find rtabmap_ros)/launch/config/rgbd_gui.ini" output="log">
      <param name="subscribe_depth"             type="bool" value="true"/>
      <param name="subscribe_scan"              type="bool" value="true"/>
      <param name="frame_id"                    type="string" value="$(arg base_frame)"/>
      <param name="wait_for_transform_duration" type="double" value="$(arg wait_for_transform)"/>
    
      <remap from="rgb/image"       to="$(arg rgb_topic)"/>
      <remap from="depth/image"     to="$(arg depth_topic)"/>
      <remap from="rgb/camera_info" to="$(arg camera_info_topic)"/>
      <remap from="scan"            to="$(arg scan_topic)"/>
    </node>

</launch>

